<div id="comments-list">
    {{#commentDtos}}
        <div class="card m-2" id="comments-{{id}}">
            <div class="card-header">
                {{nickname}}
                <!-- Button trigger modal -->
                <button type="button"
                        class="btn btn-sm btn-outline-primary"
                        data-bs-toggle="modal"
                        data-bs-target="#comment-edit-modal"
                        data-bs-id="{{id}}"
                        data-bs-nickname="{{nickname}}"
                        data-bs-body="{{body}}"
                        data-bs-article-id="{{articleId}}">수정</button>
                <!-- 댓글 삭제 버튼 -->
                <button type="button"
                        class="btb btn-sm btn-outline-danger comment-delete-btn"
                        data-comment-id="{{id}}">삭제</button>
            </div>
            <div class="card-body">
                {{body}}
            </div>
        </div>
    {{/commentDtos}}
</div>
<!-- Modal -->
<div class="modal fade" id="comment-edit-modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">댓글 수정</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- 댓글 수정 폼 추가 -->
                <form>
                    <!-- 닉네임 -->
                    <div class="mb-3">
                        <label class="form-label">닉네임</label>
                        <input type="text" class="form-control form-control-sm" id="edit-comment-nickname">
                    </div>
                    <!-- 댓글 본문 -->
                    <div class="mb-3">
                        <label class="form-label">댓글 내용</label>
                        <textarea type="text" class="form-control form-control-sm" rows="3" id="edit-comment-body"></textarea>
                    </div>
                    <!-- 히든값 -->
                    <input type="hidden" id="edit-comment-id">
                    <input type="hidden" id="edit-comment-article-id">
                    <!-- 전송버튼 -->
                    <button type="button" class="btn btn-outline-primary btn-sm" id="comment-update-btn">수정 완료</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- 모달 event 처리-->
<script>
{
    // 모달 요소 선택
    const commentEditModal = document.querySelector("#comment-edit-modal");

    // 모달 event 감지
    commentEditModal.addEventListener("show.bs.modal", function (event){
        console.log("모달이 열렸습니다..!");

        // 트리거 버튼 선택
        const triggerBtn = event.relatedTarget;

        // 데이터 가져오기
        const id = triggerBtn.getAttribute("data-bs-id");
        const nickname = triggerBtn.getAttribute("data-bs-nickname");
        const body = triggerBtn.getAttribute("data-bs-body");
        const articleId = triggerBtn.getAttribute("data-bs-article-id");
        console.log(`${id}, ${nickname}, ${body}, ${articleId}`);

        // 데이터 반영
        document.querySelector("#edit-comment-nickname").value = nickname;
        document.querySelector("#edit-comment-body").value = body;
        document.querySelector("#edit-comment-id").value = id;
        document.querySelector("#edit-comment-article-id").value = articleId;
    });
}

{
    // 수정 완료 버튼 가져오기
    const commentUpdateBtn = document.querySelector("#comment-update-btn");

    // 클릭 이벤트 감지 및 처리
    commentUpdateBtn.addEventListener("click", function (){

        // 수정 댓글 객체 생성
        const comment = {
            id:         document.querySelector("#edit-comment-id").value,
            nickname:   document.querySelector("#edit-comment-nickname").value,
            body:       document.querySelector("#edit-comment-body").value,
            article_id: document.querySelector("#edit-comment-article-id").value
        }
        console.log(comment);

        // 수정 REST API 호출 - fetch()
        const url = "/api/comments/" + comment.id;
        fetch(url,{
            method : "PATCH",               // PATCH 요청
            body : JSON.stringify(comment), // 수정된 댓글 객체를 JSON으로 전달
            headers :{
                "Content-Type" : "application/json"
            }
        }).then(response => {   // response가 왔을 때 해당 함수를 동작시켜라
            // http 응답 코드에 따른 메시지 출력
            const msg  = (response.ok) ? "댓글이 수정되었습니다!" : "댓글 수정 실패!..";
            alert(msg);

            // 현재 페이지를 새로고침
            window.location.reload();
        });

    });
}
</script>

<!-- 댓글 삭제 -->
<script>
{
    // 삭제 버튼 선택
    const commentDeleteBtns = document.querySelectorAll(".comment-delete-btn");

    // 삭제 버튼 이벤트 처리
    commentDeleteBtns.forEach(btn => {
        // 각 버튼의 이벤트 처리를 등록
        btn.addEventListener("click",function (event){
            console.log("삭제 버튼이 클릭되었습니다..!");

            // 이벤트 발생 요소를 선택
            const commentDeletebtn = event.srcElement;

            //삭제 댓글 id 가져오기
            const commentId = commentDeletebtn.getAttribute("data-comment-id");
            console.log(`삭제 버튼 클릭: ${commentId}번 댓글`);  // "삭제 버튼 클릭: " + commentId + "번 댓글"; 과 동일 코드(백틱 문자열)
        });
    });

}
</script>